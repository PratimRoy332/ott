1. Total Users & Growth Trends
What is the total number of users for LioCinema and Jotstar, and how do they compare in terms of growth trends (January–November 2024)?

SELECT * FROM jotstar_db.content_consumption;

select 'jotstar' as platform, count(distinct user_id) as total_user from jotstar_db.subscribers
union all
select 'liocinema' as platform, count(distinct user_id) as total_user from liocinema_db.subscribers;

'comparision in terms of jan-nov, 2024'

select
  platform,
  count(distinct case when month(subscription_date) = 1 then user_id end) as jan,
  count(distinct case when month(subscription_date) = 2 then user_id end) as feb,
  count(distinct case when month(subscription_date) = 3 then user_id end) as mar,
  count(distinct case when month(subscription_date) = 4 then user_id end) as apr,
  count(distinct case when month(subscription_date) = 5 then user_id end) as may,
  count(distinct case when month(subscription_date) = 6 then user_id end) as jun,
  count(distinct case when month(subscription_date) = 7 then user_id end) as jul,
  count(distinct case when month(subscription_date) = 8 then user_id end) as aug,
  count(distinct case when month(subscription_date) = 9 then user_id end) as sep,
  count(distinct case when month(subscription_date) = 10 then user_id end) as oct,
  count(distinct case when month(subscription_date) = 11 then user_id end) as nov
from (
  select 'jotstar' as platform, user_id, subscription_date
  from jotstar_db.subscribers
  where year(subscription_date) = 2024

  union all

  select 'liocinema' as platform, user_id, subscription_date
  from liocinema_db.subscribers
  where year(subscription_date) = 2024
) as users_2024
-- Optional: uncomment the line below to filter months up to August
-- where month(subscription_date) between 1 and 8
group by platform;



--------------------------------------------------------------------------------------------------------

SELECT * FROM jotstar_db.content_consumption;

'2. Content Library Comparison
What is the total number of contents available on LioCinema vs. Jotstar? How do they differ in terms of language and content type?'

select * from jotstar_db.contents;

select 'jotstar' as platform, count(distinct content_id) as total_no_of_content
from jotstar_db.contents
union all
select 'liocinema' as platform, count(distinct content_id) as total_no_of_content
from liocinema_db.contents;
select distinct language from jotstar_db.contents;

select
platform, language, count(*) as content_count
from (
select 'jotstar' as platform, language from jotstar_db.contents 
union all 
select 'liocinema' as platform, language from liocinema_db.contents
) as combined_contents
group by platform, language
order by platform, content_count desc;

-----------------------------------------------------------------------------------------------------------

'3. User Demographics
What is the distribution of users by age group, city tier, and subscription plan for each platform'
select * from jotstar_db.subscribers;

select 
platform, age_group, city_tier, subscription_plan, count(*) as distribution
from (
select 'jotstar' as platform, age_group, city_tier, subscription_plan from jotstar_db.subscribers
union all
select 'liocinema' as platform, age_group, city_tier, subscription_plan from liocinema_db.subscribers
) as combined_chart
group by platform, age_group, city_tier, subscription_plan
order by age_group asc;

-------------------------------------------------------------------------------------------------------------

'4. Active vs. Inactive Users
What percentage of LioCinema and Jotstar users are active vs. inactive? How do these rates vary by age group and subscription plan?'
select * from jotstar_db.subscribers

select
	platform, age_group, subscription_plan,
	round(sum(case when last_active_date is not null and last_active_date>=subscription_date
	then 1 else 0
	end)* 100.0 /count(*),2) as active_user,
    round(sum(case when last_active_date is null
	then 1 else 0
	end)* 100.0 /count(*),2) as inactive_user
    from (
    select 'jotstar' as platform, age_group, subscription_plan, subscription_date, last_active_date from jotstar_db.subscribers
    union all 
    select 'liocinema' as platform, age_group, subscription_plan, subscription_date, last_active_date from liocinema_db.subscribers
    ) as combined_chart
    group by platform, age_group, subscription_plan;
    
    
------------------------------------------------------------------------------------------------------------------

'5. Watch Time Analysis
What is the average watch time for LioCinema vs. Jotstar during the analysis period? How do these compare by city tier and device type?'
select 'jotstar' as platform,round(avg(total_watch_time_mins),1) as avg_watch_time from jotstar_db.content_consumption
union all
select 'liocinema' as platform, round(avg(total_watch_time_mins),1)as avg_watch_time from liocinema_db.content_consumption;

select
platform, city_tier,device_type,
round(avg(total_watch_time_mins)/60,2) as avg_watch_hrs
from (
select 'jotstar' as platform, s.city_tier, c.device_type, c.total_watch_time_mins from jotstar_db.content_consumption c
join jotstar_db.subscribers s on c.user_id=s.user_id
union all
select 'liocinema' as platform, s.city_tier, c.device_type, c.total_watch_time_mins from liocinema_db.content_consumption c
join liocinema_db.subscribers s on c.user_id=s.user_id
) as combined_chart
group by platform, city_tier, device_type
order by avg_watch_hrs desc;


----------------------------------------------------------------------------------------------------------------------

'6. Inactivity Correlation
How do inactivity patterns correlate with total watch time or average watch time? Are less engaged users more likely to become inactive?'

select * from jotstar_db.content_consumption
order by total_watch_time_mins asc;

with user_activity as (
 -- combine data from both platforms
 select 
	'jotstar' as platform, s.user_id, s.last_active_date, c.total_watch_time_mins,
    datediff(curdate(), s.last_active_date) as active_days from jotstar_db.subscribers s
    left join jotstar_db.content_consumption c on s.user_id=c.user_id
    
    union all
    
    select 
	'liocinema' as platform, s.user_id, s.last_active_date, c.total_watch_time_mins,
    datediff(curdate(), s.last_active_date) as active_days from liocinema_db.subscribers s
    left join liocinema_db.content_consumption c on s.user_id=c.user_id
)

-- classify active or inactive users and watch time as of total and average

select 
	platform,
	case
		when active_days <90 then 'active' else 'inactive'
	end as user_status,
    count(distinct user_id) as user_count,
    round(avg(coalesce(total_watch_time_mins,0)/60),2) as avg_watch_hrs,
    round(sum(coalesce(total_watch_time_mins,0)/(60*24)),2) as avg_watch_days
    from user_activity
    group by platform, user_status;


----------------------------------------------------------------------------------------------------------------------

'7. Downgrade Trends
How do downgrade trends differ between LioCinema and Jotstar? Are downgrades more prevalent on one platform compared to the other'

select * from jotstar_db.subscribers;
select * from liocinema_db.subscribers;


with downgrade_analysis as (
	select 
		'jotstar' as  platform,
        user_id, subscription_plan as previous_plan, new_subscription_plan as current_plan,
        case 
			 when new_subscription_plan='VIP' and subscription_plan= 'Free' then 'upgraded'
             when new_subscription_plan='Premium' and subscription_plan= 'Free' then 'upgraded'
			 when new_subscription_plan='Premium' and subscription_plan= 'Vip' then 'upgraded'
             when new_subscription_plan='Vip' and subscription_plan= 'Premium' then 'downgraded'
             when new_subscription_plan='Free' and subscription_plan= 'Premium' then 'downgraded'
			 when new_subscription_plan='Free' and subscription_plan= 'Vip' then 'downgraded'
		else 'no exchange'
	end as change_status
    from jotstar_db.subscribers
    where new_subscription_plan is not null
    
	union all
    
select 
		'liocinema' as  platform,
        user_id, subscription_plan as previous_plan, new_subscription_plan as current_plan,
        case 
			 when new_subscription_plan='Basic' and subscription_plan= 'Free' then 'upgraded'
             when new_subscription_plan='Premium' and subscription_plan= 'Basic' then 'upgraded'
			 when new_subscription_plan='Premium' and subscription_plan= 'free' then 'upgraded'
             when new_subscription_plan='Basic' and subscription_plan= 'Premium' then 'downgraded'
             when new_subscription_plan='Free' and subscription_plan= 'Premium' then 'downgraded'
			 when new_subscription_plan='Free' and subscription_plan= 'basic' then 'downgraded'
		else 'no exchange'
	end as change_status
    from liocinema_db.subscribers
    where new_subscription_plan is not null
)
-- summarizing results  as below

-- summarizing results as below
select 
    platform, 
    change_status, 
    count(user_id) as user_count, 
    round(
        (count(user_id) * 100.0) / sum(count(user_id)) over (partition by platform), 
        2
    ) as percentage
from downgrade_analysis
group by platform, change_status
order by platform, percentage DESC;
------------------------------------------------------------------------------------------------------------------------

8. 'Upgrade Patterns
What are the most common upgrade transitions (e.g., Free to Basic, Free to VIP, Free to Premium) for LioCinema and Jotstar? How do these differ across platforms?'

select * from jotstar_db.subscribers;
select * from liocinema_db.subscribers;

with downgrade_analysis as (
	select 
		'jotstar' as  platform,
        user_id, subscription_plan as previous_plan, new_subscription_plan as current_plan,
        case 
			 when new_subscription_plan='VIP' and subscription_plan= 'Free' then 'upgraded'
             when new_subscription_plan='Premium' and subscription_plan= 'Free' then 'upgraded'
			 when new_subscription_plan='Premium' and subscription_plan= 'Vip' then 'upgraded'
             when new_subscription_plan='Vip' and subscription_plan= 'Premium' then 'downgraded'
             when new_subscription_plan='Free' and subscription_plan= 'Premium' then 'downgraded'
			 when new_subscription_plan='Free' and subscription_plan= 'Vip' then 'downgraded'
		else 'no exchange'
	end as change_status
    from jotstar_db.subscribers
    where new_subscription_plan is not null
    
	union all
    
select 
		'liocinema' as  platform,
        user_id, subscription_plan as previous_plan, new_subscription_plan as current_plan,
        case 
			 when new_subscription_plan='Basic' and subscription_plan= 'Free' then 'upgraded'
             when new_subscription_plan='Premium' and subscription_plan= 'Basic' then 'upgraded'
			 when new_subscription_plan='Premium' and subscription_plan= 'free' then 'upgraded'
             when new_subscription_plan='Basic' and subscription_plan= 'Premium' then 'downgraded'
             when new_subscription_plan='Free' and subscription_plan= 'Premium' then 'downgraded'
			 when new_subscription_plan='Free' and subscription_plan= 'basic' then 'downgraded'
		else 'no exchange'
	end as change_status
    from liocinema_db.subscribers
    where new_subscription_plan is not null
)
-- summarizing results  as below

-- summarizing results as below
select 
    platform, previous_plan, current_plan,
    change_status, 
    count(user_id) as transition_count, 
    round(
        (count(user_id) * 100.0) / sum(count(user_id)) over (partition by platform), 
        2
    ) as percentage
from downgrade_analysis
where change_status= 'upgraded'
group by platform, change_status, previous_plan, current_plan
order by platform, percentage DESC;

---------------------------------------------------------------------------------------------------------------------------

'9. Paid Users Distribution
How does the paid user percentage (e.g., Basic, Premium for LioCinema; VIP, Premium for Jotstar) vary across different platforms? Analyse the proportion of premium users in Tier 1, Tier 2, and Tier 3 cities and identify any notable trends or differences.'

WITH paid_user AS (
    SELECT 
        'jotstar' AS platform,
        city_tier,
        ROUND(100.0 * COUNT(CASE WHEN subscription_plan IN ('VIP', 'Premium') THEN user_id END) / COUNT(user_id), 2) AS paid_user_percentage
    FROM 
        jotstar_db.subscribers
    GROUP BY 
        platform, city_tier

    UNION ALL

    SELECT 
        'liocinema' AS platform,
        city_tier,
        ROUND(100.0 * COUNT(CASE WHEN subscription_plan IN ('Basic', 'Premium') THEN user_id END) / COUNT(user_id), 2) AS paid_user_percentage
    FROM 
        liocinema_db.subscribers
    GROUP BY 
        platform, city_tier
)

SELECT 
    platform, 
    city_tier, 
    paid_user_percentage
FROM 
    paid_user
ORDER BY 
    paid_user_percentage DESC;

-----------------------------------------------------------------------------------------------------------------------------------

'9. Paid Users Distribution
How does the paid user percentage (e.g., Basic, Premium for LioCinema; VIP, Premium for Jotstar) vary across different platforms? Analyse the proportion of premium users in Tier 1, Tier 2, and Tier 3 cities and identify any notable trends or differences.'

WITH paid_user AS (
    SELECT 
        'jotstar' AS platform,
        city_tier,
        COUNT(*) AS total_users,
        COUNT(CASE WHEN subscription_plan IN ('VIP', 'Premium') THEN 1 END) AS paid_users
    FROM 
        jotstar_db.subscribers
    GROUP BY 
        city_tier

    UNION ALL

    SELECT 
        'liocinema' AS platform,
        city_tier,
        COUNT(*) AS total_users,
        COUNT(CASE WHEN subscription_plan IN ('Basic', 'Premium') THEN 1 END) AS paid_users
    FROM 
        liocinema_db.subscribers
    GROUP BY 
        city_tier
)

SELECT 
    platform,
    city_tier,
    ROUND(100.0 * paid_users / total_users, 2) AS paid_user_percentage,
    paid_users AS paid_user_count
FROM 
    paid_user
ORDER BY 
    paid_user_percentage DESC;
	
-----------------------------------------------------------------------------------------------------------------------------------

'10. Revenue Analysis
Assume the following monthly subscription prices, calculate the total revenue generated by both platforms (LioCinema and Jotstar) for the analysis period (January to November 2024).
The c alculation should consider:
❖
Subscribers count under each plan.
❖
Active duration of subscribers on their respective plans.
❖
Upgrades and downgrades during the period, ensuring revenue reflects the time spent under each plan.'

select * from liocinema_db.subscribers;

with user_estimate as (
select
          'jotstar' as platform,
        subscription_plan
		from jotstar_db.subscribers
		where subscription_plan in ('vip', 'premium')

    union all

    select
        'liocinema' as platform,
        subscription_plan
    from liocinema_db.subscribers
    where subscription_plan in ('basic', 'premium')
)

SELECT 
    platform, 
    159 * SUM(CASE WHEN subscription_plan = 'vip' THEN 1 ELSE 0 END) AS vip_score,
    359 * SUM(CASE WHEN subscription_plan = 'premium' AND platform = 'jotstar' THEN 1 ELSE 0 END) AS premium_score,
    129 * SUM(CASE WHEN subscription_plan = 'premium' AND platform = 'liocinema' THEN 1 ELSE 0 END) AS premium_score,
    69 * SUM(CASE WHEN subscription_plan = 'basic' THEN 1 ELSE 0 END) AS basic_score,
    sum(CASE WHEN subscription_plan = 'vip' THEN 1 ELSE 0 END) AS vip_subscribers,
    SUM(CASE WHEN subscription_plan = 'premium' AND platform = 'jotstar' THEN 1 ELSE 0 END) AS premium_subscribers,
    SUM(CASE WHEN subscription_plan = 'premium' AND platform = 'liocinema' THEN 1 ELSE 0 END) AS premium_subscribers,
    SUM(CASE WHEN subscription_plan = 'basic' THEN 1 ELSE 0 END) AS basic_subscribers
FROM user_estimate
GROUP BY platform;

select * from liocinema_db.subscribers

-- CHECL NULL VALUE 
SELECT DISTINCT SUBSCRIPTION_PLAN FROM liocinema_db.SUBSCRIBERS;
SELECT DISTINCT new_SUBSCRIPTION_PLAN FROM liocinema_db.SUBSCRIBERS;

SELECT USER_ID, COALESCE(NEW_SUBSCRIPTION_PLAN, 'nULL') AS contact FROM liocinema_db.SUBSCRIBERS;

with revenue_estimate as (
	select 
		'jotstar' as platform, 
		subscription_plan as previous_plan, 
		new_subscription_plan as current_plan,
		user_id,
		case 
			when subscription_plan = 'premium' and (new_subscription_plan IS NULL or lower(new_subscription_plan) IN ('free', 'vip')) then 1
			when subscription_plan = 'vip' and (new_subscription_plan IS NULL or lower(new_subscription_plan) IN ('premium', 'free')) then 1
			when subscription_plan = 'free' and (new_subscription_plan IS NULL or lower(new_subscription_plan) IN ('premium', 'vip')) then 1
			else 0 
		end AS subscribers_count
	from JOTSTAR_DB.SUBSCRIBERS
    
	union all

	select 
		'liocinema' as platform, 
		subscription_plan as previous_plan, 
		new_subscription_plan as current_plan,
		user_id,
		case 
			when subscription_plan = 'premium' and (new_subscription_plan IS NULL or lower(new_subscription_plan) IN ('free', 'basic')) then 1
			when subscription_plan = 'basic' and (new_subscription_plan IS NULL or lower(new_subscription_plan) IN ('premium', 'free')) then 1
			when subscription_plan = 'free' and (new_subscription_plan IS NULL or lower(new_subscription_plan) IN ('basic', 'premium')) then 1
			else 0 
		end AS subscribers_count
	from JOTSTAR_DB.SUBSCRIBERS
)

select 
	platform, 
	previous_plan, 
	current_plan, 
	count(user_id) as total_users,
    subscribers_count
from revenue_estimate
group by platform, previous_plan, current_plan, subscribers_count
order by platform, total_users;

--------------------------------------------------------------------------------------------------------------------------------------------------

        






